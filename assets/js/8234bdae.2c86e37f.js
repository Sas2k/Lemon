"use strict";(self.webpackChunklemon_docs=self.webpackChunklemon_docs||[]).push([[5023],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),m=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=m(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=m(n),d=o,f=p["".concat(l,".").concat(d)]||p[d]||u[d]||i;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var m=2;m<i;m++)a[m]=n[m];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9460:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>m});var r=n(7462),o=(n(7294),n(3905));const i={title:"Lemon.orm.migrations",sidebar_position:7},a="Lemon.orm.migrations",s={unversionedId:"api-reference/Lemon-orm-migrations",id:"version-1.3.0/api-reference/Lemon-orm-migrations",title:"Lemon.orm.migrations",description:"The migrations manager",source:"@site/versioned_docs/version-1.3.0/api-reference/Lemon-orm-migrations.md",sourceDirName:"api-reference",slug:"/api-reference/Lemon-orm-migrations",permalink:"/Lemon/docs/api-reference/Lemon-orm-migrations",draft:!1,editUrl:"https://github.com/Sas2k/Lemon/edit/main/website/versioned_docs/version-1.3.0/api-reference/Lemon-orm-migrations.md",tags:[],version:"1.3.0",sidebarPosition:7,frontMatter:{title:"Lemon.orm.migrations",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Lemon.orm.DBManager",permalink:"/Lemon/docs/api-reference/Lemon-orm-DBManager"},next:{title:"Intro",permalink:"/Lemon/docs/tutorial/intro-to-tutorial"}},l={},m=[{value:"Migrate Class | (self, model_list) &lt; Developer-Class &gt;",id:"migrate-class--self-model_list--developer-class-",level:2},{value:"Attributes, Properties and Functions",id:"attributes-properties-and-functions",level:3},{value:"migrate Function | (self)",id:"migrate-function--self",level:4},{value:"MigrateCommand Function | (model_list)",id:"migratecommand-function--model_list",level:2},{value:"Attributes, Properties and Functions",id:"attributes-properties-and-functions-1",level:2},{value:"migrate Function | (self)",id:"migrate-function--self-1",level:4}],c={toc:m};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"lemonormmigrations"},"Lemon.orm.migrations"),(0,o.kt)("p",null,"The migrations manager"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from Lemon.orm import DBManager, migrations\n\nbaseModel = DBManager.baseModel\nClassBase = DBManager.base\nmigrate = migrations.MigrateCommand\n\nclass model(baseModel):\n    base_model = ClassBase\n    tablename = "model"\n    fields = ("field1", "field2")\n\nmodel_list = [model]\n\nmigrate(model_list).migrate()\n')),(0,o.kt)("h2",{id:"migrate-class--self-model_list--developer-class-"},"Migrate ","[Class]"," | (self, model_list) < Developer-Class >"),(0,o.kt)("p",null,"The migrate command for the Lemon ORM"),(0,o.kt)("h3",{id:"attributes-properties-and-functions"},"Attributes, Properties and Functions"),(0,o.kt)("h4",{id:"migrate-function--self"},"migrate ","[Function]"," | (self)"),(0,o.kt)("p",null,"migrates the models to a Database."),(0,o.kt)("h2",{id:"migratecommand-function--model_list"},"MigrateCommand ","[Function]"," | (model_list)"),(0,o.kt)("p",null,"The base function for the migrate function."),(0,o.kt)("h2",{id:"attributes-properties-and-functions-1"},"Attributes, Properties and Functions"),(0,o.kt)("h4",{id:"migrate-function--self-1"},"migrate ","[Function]"," | (self)"),(0,o.kt)("p",null,"The migrate function which is used in base.py"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"model_list = [model]\n\nmigrate(model_list).migrate()\n")))}u.isMDXComponent=!0}}]);