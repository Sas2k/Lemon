"use strict";(self.webpackChunklemon_docs=self.webpackChunklemon_docs||[]).push([[9025],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=c(n),d=l,f=p["".concat(i,".").concat(d)]||p[d]||u[d]||r;return n?a.createElement(f,o(o({ref:t},m),{},{components:n})):a.createElement(f,o({ref:t},m))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=p;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:l,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1590:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(7462),l=(n(7294),n(3905));const r={title:"Lemon.orm.DBManager",sidebar_position:6},o="Lemon.orm.DBManager",s={unversionedId:"api-reference/Lemon-orm-DBManager",id:"api-reference/Lemon-orm-DBManager",title:"Lemon.orm.DBManager",description:"The Database Manager",source:"@site/docs/api-reference/Lemon-orm-DBManager.md",sourceDirName:"api-reference",slug:"/api-reference/Lemon-orm-DBManager",permalink:"/Lemon/docs/next/api-reference/Lemon-orm-DBManager",draft:!1,editUrl:"https://github.com/Sas2k/Lemon/edit/main/website/docs/api-reference/Lemon-orm-DBManager.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Lemon.orm.DBManager",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Lemon.orm",permalink:"/Lemon/docs/next/api-reference/Lemon-orm"},next:{title:"Lemon.orm.migrations",permalink:"/Lemon/docs/next/api-reference/Lemon-orm-migrations"}},i={},c=[{value:"SQLConnectionManager Class | (self, filename) &lt; Developer-Class &gt;",id:"sqlconnectionmanager-class--self-filename--developer-class-",level:2},{value:"Attributes, Properties and Functions",id:"attributes-properties-and-functions",level:3},{value:"SqliteManager Class | (self, filename)",id:"sqlitemanager-class--self-filename",level:2},{value:"base Class | (self)",id:"base-class--self",level:2},{value:"baseModel Class | (self)",id:"basemodel-class--self",level:2},{value:"MetaModel Class | (self) &lt; Developer-Class &gt;",id:"metamodel-class--self--developer-class-",level:2}],m={toc:c};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"lemonormdbmanager"},"Lemon.orm.DBManager"),(0,l.kt)("p",null,"The Database Manager"),(0,l.kt)("h2",{id:"sqlconnectionmanager-class--self-filename--developer-class-"},"SQLConnectionManager ","[Class]"," | (self, filename) < Developer-Class >"),(0,l.kt)("p",null,"The SQLConnectionManager used in migrations"),(0,l.kt)("h3",{id:"attributes-properties-and-functions"},"Attributes, Properties and Functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("h4",{parentName:"li",id:"commit-decoratorfunctions--operation"},"commit ","[Decorator(Functions)]"," | (operation)"))),(0,l.kt)("p",null,"Commits a query."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("h4",{parentName:"li",id:"create_table-function--self-tablename-fields"},"create_table ","[Function]"," | (self, tablename, fields)"))),(0,l.kt)("p",null,"creates a table"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("h4",{parentName:"li",id:"show_tables-propertyfunction--self"},"show_tables ","[Property(Function)]"," | (self)"))),(0,l.kt)("p",null,"shows the tables in the database"),(0,l.kt)("h2",{id:"sqlitemanager-class--self-filename"},"SqliteManager ","[Class]"," | (self, filename)"),(0,l.kt)("p",null,"The SQLite Manager."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from Lemon.orm.DBManager import SqliteManager\n\nsql = SqliteManager("model.db")\n\nsql.select("authors", ["name", "age"])\n\nsql.insert("authors", ["Paul", "age"], ["Paul", "25"])\n\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("h3",{parentName:"li",id:"commit-decoratorfunction--operation--developer-function-"},"commit ","[Decorator(function)]"," | (operation) < Developer-Function >"))),(0,l.kt)("p",null,"Commits the query."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("h3",{parentName:"li",id:"create_table-function--self-tablename-columns"},"create_table ","[Function]"," | (self, tablename, columns)"))),(0,l.kt)("p",null,"Creates a table in the Database."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'sql = SqliteManager("model.db")\n\nsql.create_table("authors", ["name", "age"])\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("h3",{parentName:"li",id:"insert-function--self-tablename-columns-values"},"insert ","[Function]"," | (self, tablename, columns, values)"))),(0,l.kt)("p",null,"inserts data to columns"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'sql = SqliteManager("model.db")\n\nsql.insert("authors", ["name", "age"], ["Paul", "25"])\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("h3",{parentName:"li",id:"select-function--self-tablename-columns"},"select ","[Function]"," | (self, tablename, columns)"))),(0,l.kt)("p",null,"selects columns from the table."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'sql = SqliteManager("model.db")\n\nsql.select("authors", ["name", "age"])\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("h3",{parentName:"li",id:"delete-function--self-tablename-conditions-logicand"},"delete ","[Function]",' | (self, tablename, conditions, logic="AND")'))),(0,l.kt)("p",null,"Deletes a record from the table which matches the condition."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'sql = SqliteManager("model.db")\n\nsql.delete("authors", ["name=\'paul\'", "age=25"], "AND")\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("h3",{parentName:"li",id:"update-function--self-tablename-columns-values"},"update ","[Function]"," | (self, tablename, columns, values)"))),(0,l.kt)("p",null,"Update values in the Database."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'sql = SqliteManager("model.db")\n\nsql.update("authors", ["name", "age"], ["Paul", "22"])\n')),(0,l.kt)("h2",{id:"base-class--self"},"base ","[Class]"," | (self)"),(0,l.kt)("p",null,"The Base Class to be inherited."),(0,l.kt)("h2",{id:"basemodel-class--self"},"baseModel ","[Class]"," | (self)"),(0,l.kt)("p",null,"The Base Model to be inherited"),(0,l.kt)("h2",{id:"metamodel-class--self--developer-class-"},"MetaModel ","[Class]"," | (self) < Developer-Class >"),(0,l.kt)("p",null,"The MetaModel Class"))}u.isMDXComponent=!0}}]);